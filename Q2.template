{
   "AWSTemplateFormatVersion" : "2010-09-09",

   "Description" : "Creates a VPC spanning 3 AZes, 3 public subnets, 3 private subnets, 3 NATs and a BastionHost",

   "Parameters" : {

      "KeyName" : {
         "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
         "Type": "AWS::EC2::KeyPair::KeyName",
         "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
      },
      "InstanceType" : {
         "Description" : "Bastion Host",
         "Type" : "String",
         "Default" : "t1.micro",
         "AllowedValues" : [ "t1.micro", "m1.small"],
         "ConstraintDescription" : "must be a valid EC2 instance type."
      },
      "RegionName" : {
         "Description" : "The name of the region, e.g. us-east-1 where this VPC will be created.",
         "Type" : "String",
         "Default" : "us-east-1",
         "AllowedValues" : [ "us-east-1", "us-west-2" ],
         "ConstraintDescription" : "must be one of these AWS regions"
      },
      "Environment" : {
         "Description" : "The type of VPC we want to create: sandbox, dev, or production.",
         "Type" : "String",
         "AllowedValues" : [ "sandbox", "dev", "prod", "admin" ],
         "Default" : "sandbox",
         "ConstraintDescription" : "must be one of these types of Mozilla VPCs"
      },
      "BgpAutonomousSystemNumber" : {
         "Description" : "The ASN of Mozilla's router in our datacenter",
         "Type" : "Number",
         "MinValue" : "1",
         "MaxValue" : "65536",
         "Default" : "65022"
      },
      "IPSecTunnelTarget" : {
         "Description" : "The IP address of our firewall where the IPSec tunnels will terminate",
         "Type" : "String",
         "MinLength": "9",
         "MaxLength": "18",
         "Default": "63.245.214.54",
         "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
         "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x"
      }
   },

   "Mappings" : {

      "AWSInstanceType2Arch" : {
         "t1.micro"    : { "Arch" : "PV64"   },
         "t2.micro"    : { "Arch" : "HVM64"  },
         "t2.small"    : { "Arch" : "HVM64"  },
         "t2.medium"   : { "Arch" : "HVM64"  },
         "m1.small"    : { "Arch" : "PV64"   },
         "m1.medium"   : { "Arch" : "PV64"   },
         "m1.large"    : { "Arch" : "PV64"   },
         "m1.xlarge"   : { "Arch" : "PV64"   },
         "m2.xlarge"   : { "Arch" : "PV64"   },
         "m2.2xlarge"  : { "Arch" : "PV64"   },
         "m2.4xlarge"  : { "Arch" : "PV64"   },
         "m3.medium"   : { "Arch" : "HVM64"  },
         "m3.large"    : { "Arch" : "HVM64"  },
         "m3.xlarge"   : { "Arch" : "HVM64"  },
         "m3.2xlarge"  : { "Arch" : "HVM64"  },
         "c1.medium"   : { "Arch" : "PV64"   },
         "c1.xlarge"   : { "Arch" : "PV64"   },
         "c3.large"    : { "Arch" : "HVM64"  },
         "c3.xlarge"   : { "Arch" : "HVM64"  },
         "c3.2xlarge"  : { "Arch" : "HVM64"  },
         "c3.4xlarge"  : { "Arch" : "HVM64"  },
         "c3.8xlarge"  : { "Arch" : "HVM64"  },
         "g2.2xlarge"  : { "Arch" : "HVMG2"  },
         "r3.large"    : { "Arch" : "HVM64"  },
         "r3.xlarge"   : { "Arch" : "HVM64"  },
         "r3.2xlarge"  : { "Arch" : "HVM64"  },
         "r3.4xlarge"  : { "Arch" : "HVM64"  },
         "r3.8xlarge"  : { "Arch" : "HVM64"  },
         "i2.xlarge"   : { "Arch" : "HVM64"  },
         "i2.2xlarge"  : { "Arch" : "HVM64"  },
         "i2.4xlarge"  : { "Arch" : "HVM64"  },
         "i2.8xlarge"  : { "Arch" : "HVM64"  },
         "hi1.4xlarge" : { "Arch" : "HVM64"  },
         "hs1.8xlarge" : { "Arch" : "HVM64"  },
         "cr1.8xlarge" : { "Arch" : "HVM64"  },
         "cc2.8xlarge" : { "Arch" : "HVM64"  }
       },
       "AWSRegionArch2AMI" : {
          "us-east-1"      : { "PV64" : "ami-50842d38", "HVM64" : "ami-08842d60", "HVMG2" : "ami-3a329952"  },
          "us-west-2"      : { "PV64" : "ami-af86c69f", "HVM64" : "ami-8786c6b7", "HVMG2" : "ami-47296a77"  },
          "us-west-1"      : { "PV64" : "ami-c7a8a182", "HVM64" : "ami-cfa8a18a", "HVMG2" : "ami-331b1376"  },
          "eu-west-1"      : { "PV64" : "ami-aa8f28dd", "HVM64" : "ami-748e2903", "HVMG2" : "ami-00913777"  },
          "ap-southeast-1" : { "PV64" : "ami-20e1c572", "HVM64" : "ami-d6e1c584", "HVMG2" : "ami-fabe9aa8"  },
          "ap-northeast-1" : { "PV64" : "ami-21072820", "HVM64" : "ami-35072834", "HVMG2" : "ami-5dd1ff5c"  },
          "ap-southeast-2" : { "PV64" : "ami-8b4724b1", "HVM64" : "ami-fd4724c7", "HVMG2" : "ami-e98ae9d3"  },
          "sa-east-1"      : { "PV64" : "ami-9d6cc680", "HVM64" : "ami-956cc688", "HVMG2" : "NOT_SUPPORTED" },
          "cn-north-1"     : { "PV64" : "ami-a857c591", "HVM64" : "ami-ac57c595", "HVMG2" : "NOT_SUPPORTED" },
          "eu-central-1"   : { "PV64" : "ami-a03503bd", "HVM64" : "ami-b43503a9", "HVMG2" : "ami-b03503ad"  }
       },
       "RegionEnvironment" : {
          "us-east-1": {
             "sandbox": "us-east-1-sandbox",
             "dev": "us-east-1-dev",
             "prod": "us-east-1-prod",
             "admin": "us-east-1-admin"
          },
          "us-west-2": {
             "sandbox": "us-west-2-sandbox",
             "dev": "us-west-2-dev",
             "prod": "us-west-2-prod",
             "admin": "us-west-2-admin"
          }
       },
       "RegionVpcCidr" : {
          "us-east-1-sandbox": {
             "VpcCidr": "10.160.0.0/16",
             "PublicSubnetAZ1Cidr" : "10.160.192.0/21",
             "PublicSubnetAZ2Cidr" : "10.160.200.0/21",
             "PublicSubnetAZ3Cidr" : "10.160.208.0/21",
             "PrivateSubnetAZ1Cidr" : "10.160.0.0/18",
             "PrivateSubnetAZ2Cidr" : "10.160.64.0/18",
             "PrivateSubnetAZ3Cidr" : "10.160.128.0/18"
          },
          "us-east-1-dev": {
             "VpcCidr": "10.162.0.0/16",
             "PublicSubnetAZ1Cidr" : "10.162.192.0/21",
             "PublicSubnetAZ2Cidr" : "10.162.200.0/21",
             "PublicSubnetAZ3Cidr" : "10.162.208.0/21",
             "PrivateSubnetAZ1Cidr" : "10.162.0.0/18",
             "PrivateSubnetAZ2Cidr" : "10.162.64.0/18",
             "PrivateSubnetAZ3Cidr" : "10.162.128.0/18"
          },
          "us-east-1-prod": {
             "VpcCidr": "10.164.0.0/16",
             "PublicSubnetAZ1Cidr" : "10.164.192.0/21",
             "PublicSubnetAZ2Cidr" : "10.164.200.0/21",
             "PublicSubnetAZ3Cidr" : "10.164.208.0/21",
             "PrivateSubnetAZ1Cidr" : "10.164.0.0/18",
             "PrivateSubnetAZ2Cidr" : "10.164.64.0/18",
             "PrivateSubnetAZ3Cidr" : "10.164.128.0/18"
          },
          "us-east-1-admin": {
             "VpcCidr": "10.172.0.0/16",
             "PublicSubnetAZ1Cidr" : "10.172.192.0/21",
             "PublicSubnetAZ2Cidr" : "10.172.200.0/21",
             "PublicSubnetAZ3Cidr" : "10.172.208.0/21",
             "PrivateSubnetAZ1Cidr" : "10.172.0.0/18",
             "PrivateSubnetAZ2Cidr" : "10.172.64.0/18",
             "PrivateSubnetAZ3Cidr" : "10.172.128.0/18"
          },
          "us-west-2-sandbox": {
             "VpcCidr": "10.166.0.0/16",
             "PublicSubnetAZ1Cidr" : "10.166.192.0/21",
             "PublicSubnetAZ2Cidr" : "10.166.200.0/21",
             "PublicSubnetAZ3Cidr" : "10.166.208.0/21",
             "PrivateSubnetAZ1Cidr" : "10.166.0.0/18",
             "PrivateSubnetAZ2Cidr" : "10.166.64.0/18",
             "PrivateSubnetAZ3Cidr" : "10.166.128.0/18"
          },
          "us-west-2-dev": {
             "VpcCidr": "10.168.0.0/16",
             "PublicSubnetAZ1Cidr" : "10.168.192.0/21",
             "PublicSubnetAZ2Cidr" : "10.168.200.0/21",
             "PublicSubnetAZ3Cidr" : "10.168.208.0/21",
             "PrivateSubnetAZ1Cidr" : "10.168.0.0/18",
             "PrivateSubnetAZ2Cidr" : "10.168.64.0/18",
             "PrivateSubnetAZ3Cidr" : "10.168.128.0/18"
          },
          "us-west-2-prod": {
             "VpcCidr": "10.170.0.0/16",
             "PublicSubnetAZ1Cidr" : "10.170.192.0/21",
             "PublicSubnetAZ2Cidr" : "10.170.200.0/21",
             "PublicSubnetAZ3Cidr" : "10.170.208.0/21",
             "PrivateSubnetAZ1Cidr" : "10.170.0.0/18",
             "PrivateSubnetAZ2Cidr" : "10.170.64.0/18",
             "PrivateSubnetAZ3Cidr" : "10.170.128.0/18"
          },
          "us-west-2-admin": {
             "VpcCidr": "10.174.0.0/16",
             "PublicSubnetAZ1Cidr" : "10.174.192.0/21",
             "PublicSubnetAZ2Cidr" : "10.174.200.0/21",
             "PublicSubnetAZ3Cidr" : "10.174.208.0/21",
             "PrivateSubnetAZ1Cidr" : "10.174.0.0/18",
             "PrivateSubnetAZ2Cidr" : "10.174.64.0/18",
             "PrivateSubnetAZ3Cidr" : "10.174.128.0/18"
          }
      },  
      "AWSNATAMI": {
         "us-east-1":      { "AMI": "ami-c6699baf" },
         "us-west-2":      { "AMI": "ami-52ff7262" }
      },
      "Region2AZ" : {
         "us-east-1-sandbox" : { "AZ1" : "us-east-1a", "AZ2" : "us-east-1c", "AZ3" : "us-east-1d" },
         "us-east-1-dev" : { "AZ1" : "us-east-1a", "AZ2" : "us-east-1b", "AZ3" : "us-east-1d" },
         "us-east-1-prod" : { "AZ1" : "us-east-1b", "AZ2" : "us-east-1c", "AZ3" : "us-east-1d" },
         "us-esst-1-admin" : { "AZ1" : "us-east-1b", "AZ2" : "us-east-1c", "AZ3" : "us-east-1d" },
         "us-west-2-sandbox" : { "AZ1" : "us-west-2a", "AZ2" : "us-west-2b", "AZ3" : "us-west-2c" },
         "us-west-2-dev" : { "AZ1" : "us-west-2a", "AZ2" : "us-west-2b", "AZ3" : "us-west-2c" },
         "us-west-2-prod" : { "AZ1" : "us-west-2a", "AZ2" : "us-west-2b", "AZ3" : "us-west-2c" },
         "us-west-2-admin" : { "AZ1" : "us-west-2a", "AZ2" : "us-west-2b", "AZ3" : "us-west-2c" }
      },
      "DhcpOptions2Vpc" : {
         "us-east-1-sandbox" : { "DhcpString" : "domain-name = us-east-1.compute.internal, sandbox.nubis.allizom.org; domain-name-servers = AmazonProvidedDNS"},
         "us-east-1-dev" : { "DhcpString" : "domain-name = us-east-1.compute.internal, dev.nubis.allizom.org; domain-name-servers = AmazonProvidedDNS"},
         "us-east-1-prod" : { "DhcpString" : "domain-name = us-east-1.compute.internal, prod.nubis.allizom.org; domain-name-servers = AmazonProvidedDNS"},
         "us-east-1-admin" : { "DhcpString" : "domain-name = us-east-1.compute.internal, admin.nubis.allizom.org; domain-name-servers = AmazonProvidedDNS"},
         "us-west-2-sandbox" : { "DhcpString" : "domain-name = us-west-2.compute.internal, sandbox.nubis.allizom.org; domain-name-servers = AmazonProvidedDNS"},
         "us-west-2-dev" : { "DhcpString" : "domain-name = us-west-2.compute.internal, dev.nubis.allizom.org; domain-name-servers = AmazonProvidedDNS"},
         "us-west-2-prod" : { "DhcpString" : "domain-name = us-west-2.compute.internal, prod.nubis.allizom.org; domain-name-servers = AmazonProvidedDNS"},
         "us-west-2-admin" : { "DhcpString" : "domain-name = us-west-2.compute.internal, admin.nubis.allizom.org; domain-name-servers = AmazonProvidedDNS"}
      }
   },

   "Resources" : {

      "MozillaVpc" : {
         "Type" : "AWS::EC2::VPC",
         "Properties" : {
            "EnableDnsSupport" : "true",
            "EnableDnsHostnames" : "true",
            "CidrBlock": { "Fn::FindInMap" : [ "RegionVpcCidr", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "VpcCidr"]},
            "Tags" : [ {"Key" : "Name", "Value" : "Q2-Test"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },

      "VpcDhcpOptionsAssociation" : {
        "Type" : "AWS::EC2::VPCDHCPOptionsAssociation",
        "Properties" : {
          "VpcId" : {"Ref" : "MozillaVpc" },
          "DhcpOptionsId" : {"Ref" : "DhcpOptions"}
        }
      },

      "DhcpOptions" : {
         "Type" : "AWS::EC2::DHCPOptions",
         "Properties" : {
            "DomainName": { "Fn::FindInMap" : [ "DhcpOptions2Vpc", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "DhcpString"]}
         }
      },

      "InternetGateway" : {
         "Type" : "AWS::EC2::InternetGateway",
         "Properties" : {
            "Tags" : [ {"Key" : "Name", "Value" : "InternetGateway"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "InternetGatewayAttachment" : {
         "Type" : "AWS::EC2::VPCGatewayAttachment",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "InternetGatewayId" : { "Ref" : "InternetGateway" }
         }
      },
      "PublicRouteTable" : {
         "Type" : "AWS::EC2::RouteTable",
         "Properties" : {
            "VpcId" : {"Ref" : "MozillaVpc"},
            "Tags" : [ {"Key" : "Name", "Value" : "PublicRouteTable"}]
         }
      },
      "DefaultRoute" : {
         "Type" : "AWS::EC2::Route",
         "Properties" : {
            "RouteTableId" : { "Ref" : "PublicRouteTable" },
            "DestinationCidrBlock" : "0.0.0.0/0",
            "GatewayId" : { "Ref" : "InternetGateway" }
         }
      },
      "PublicSubnetAZ1" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "AvailabilityZone": { "Fn::FindInMap" : [ "Region2AZ", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "AZ1"]},
            "CidrBlock": { "Fn::FindInMap" : [ "RegionVpcCidr", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "PublicSubnetAZ1Cidr"]},
            "Tags" : [ {"Key" : "Name", "Value" : "PublicSubnetAZ1"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "PublicSubnetAZ2" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "AvailabilityZone": { "Fn::FindInMap" : [ "Region2AZ", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "AZ2"]},
            "CidrBlock": { "Fn::FindInMap" : [ "RegionVpcCidr", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "PublicSubnetAZ2Cidr"]},
            "Tags" : [ {"Key" : "Name", "Value" : "PublicSubnetAZ2"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "PublicSubnetAZ3" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "AvailabilityZone": { "Fn::FindInMap" : [ "Region2AZ", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "AZ3"]},
            "CidrBlock": { "Fn::FindInMap" : [ "RegionVpcCidr", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "PublicSubnetAZ3Cidr"]},
            "Tags" : [ {"Key" : "Name", "Value" : "PublicSubnetAZ3"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "PublicSubnetAZ1RouteTableAssociation" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : { "Ref" : "PublicSubnetAZ1" },
            "RouteTableId" : { "Ref" : "PublicRouteTable" }
         }
      },
      "PublicSubnetAZ2RouteTableAssociation" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : { "Ref" : "PublicSubnetAZ2" },
            "RouteTableId" : { "Ref" : "PublicRouteTable" }
         }
      },
      "PublicSubnetAZ3RouteTableAssociation" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : { "Ref" : "PublicSubnetAZ3" },
            "RouteTableId" : { "Ref" : "PublicRouteTable" }
         }
      },
      "SharedServicesSecurityGroup" : {
         "Type" : "AWS::EC2::SecurityGroup",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "GroupDescription" : "The security group for all instances.",
            "SecurityGroupIngress" : [
               { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "IpProtocol" : "icmp", "FromPort" : "8", "ToPort" : "-1", "CidrIp" : "0.0.0.0/0" }
            ],
            "Tags" : [ {"Key" : "Name", "Value" : "SSSG"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "SssgAllowConsulTcpIn" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
            "GroupId" : { "Ref" : "SharedServicesSecurityGroup" },
            "IpProtocol" : "tcp", "FromPort" : "8300", "ToPort" : "8302", "SourceSecurityGroupId" : { "Ref" : "SharedServicesSecurityGroup" }
         }
      },
      "SssgAllowConsulUdpIn" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
            "GroupId" : { "Ref" : "SharedServicesSecurityGroup" },
            "IpProtocol" : "udp", "FromPort" : "8300", "ToPort" : "8302", "SourceSecurityGroupId" : { "Ref" : "SharedServicesSecurityGroup" }
         }
      },
      "SssgAllowAnyTcpOut" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
            "GroupId" : { "Ref" : "SharedServicesSecurityGroup" },
            "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "SourceSecurityGroupId" : { "Ref" : "SharedServicesSecurityGroup" }
         }
      },
      "SssgAllowAnyUdpOut" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
            "GroupId" : { "Ref" : "SharedServicesSecurityGroup" },
            "IpProtocol" : "udp", "FromPort" : "0", "ToPort" : "65535", "SourceSecurityGroupId" : { "Ref" : "SharedServicesSecurityGroup" }
         }
      },
      "SssgAllowAnyIcmpOut" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
            "GroupId" : { "Ref" : "SharedServicesSecurityGroup" },
            "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "SourceSecurityGroupId" : { "Ref" : "SharedServicesSecurityGroup" }
         }
      },
      "InternetAccessSecurityGroup" : {
         "Type" : "AWS::EC2::SecurityGroup",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "GroupDescription" : "Internet Access security group",
            "SecurityGroupEgress" : [
               { "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : "0.0.0.0/0" },
               { "IpProtocol" : "udp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : "0.0.0.0/0" },
               { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : "0.0.0.0/0" }
            ],
            "Tags" : [ {"Key" : "Name", "Value" : "InternetAccessSecurityGroup"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "BastionHostSecurityGroup" : {
         "Type" : "AWS::EC2::SecurityGroup",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "GroupDescription" : "Bastion Host security group (ping and ssh)",
            "SecurityGroupIngress" : [ 
               { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" },
               { "IpProtocol" : "icmp", "FromPort" : "8", "ToPort" : "-1", "CidrIp" : "0.0.0.0/0" }
            ],
            "Tags" : [ {"Key" : "Name", "Value" : "BastionHostSecurityGroup"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "BastionHost1" : {
         "Type" : "AWS::EC2::Instance",
         "Properties" : {
            "KeyName" : { "Ref" : "KeyName" },
            "NetworkInterfaces" : [{
               "GroupSet"                 : [{ "Ref" : "BastionHostSecurityGroup" }],
               "AssociatePublicIpAddress" : "true",
               "DeviceIndex"              : "0",
               "DeleteOnTermination"      : "true",
               "SubnetId"                 : { "Ref" : "PublicSubnetAZ1" }
            }],
            "Tags" : [ {"Key" : "Name", "Value" : "BastionHost1"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}],
            "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "RegionName" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] }
         }
      },
      "NatSecurityGroup" : {
         "Type" : "AWS::EC2::SecurityGroup",
         "Properties" : {
            "GroupDescription" : "NAT Security Group",
            "VpcId" : { "Ref" : "MozillaVpc" },
            "SecurityGroupIngress" : [
               { "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "SourceSecurityGroupId" : { "Ref" : "InternetAccessSecurityGroup" } },
               { "IpProtocol" : "udp", "FromPort" : "0", "ToPort" : "65535", "SourceSecurityGroupId" : { "Ref" : "InternetAccessSecurityGroup" } },
               { "IpProtocol" : "icmp", "FromPort" : "8", "ToPort" : "-1", "SourceSecurityGroupId" : { "Ref" : "InternetAccessSecurityGroup" } }
            ],
            "Tags" : [ {"Key" : "Name", "Value" : "NATSecurityGroup"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "SharedNatAZ1" : {
         "Type" : "AWS::EC2::Instance",
         "Properties" : {
            "KeyName" : { "Ref" : "KeyName" },
            "SourceDestCheck" : "false",
            "ImageId" : { "Fn::FindInMap" : [ "AWSNATAMI", { "Ref" : "AWS::Region" }, "AMI" ]},
            "NetworkInterfaces" : [{
               "GroupSet" : [{ "Ref" : "NatSecurityGroup" }],
               "AssociatePublicIpAddress" : "true",
               "DeviceIndex" : "0",
               "DeleteOnTermination" : "true",
               "SubnetId" : { "Ref" : "PublicSubnetAZ1" }
            }],
            "Tags" : [ {"Key" : "Name", "Value" : "SharedNAT_AZ1"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },  
      "SharedNatAZ2" : {
         "Type" : "AWS::EC2::Instance",
         "Properties" : {
            "KeyName" : { "Ref" : "KeyName" },
            "SourceDestCheck" : "false",
            "ImageId" : { "Fn::FindInMap" : [ "AWSNATAMI", { "Ref" : "AWS::Region" }, "AMI" ]},
            "NetworkInterfaces" : [{
               "GroupSet" : [{ "Ref" : "NatSecurityGroup" }],
               "AssociatePublicIpAddress" : "true",
               "DeviceIndex" : "0",
               "DeleteOnTermination" : "true",
               "SubnetId" : { "Ref" : "PublicSubnetAZ2" }
            }],
            "Tags" : [ {"Key" : "Name", "Value" : "SharedNAT_AZ2"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },  
      "SharedNatAZ3" : {
         "Type" : "AWS::EC2::Instance",
         "Properties" : {
            "KeyName" : { "Ref" : "KeyName" },
            "SourceDestCheck" : "false",
            "ImageId" : { "Fn::FindInMap" : [ "AWSNATAMI", { "Ref" : "AWS::Region" }, "AMI" ]},
            "NetworkInterfaces" : [{
               "GroupSet" : [{ "Ref" : "NatSecurityGroup" }],
               "AssociatePublicIpAddress" : "true",
               "DeviceIndex" : "0",
               "DeleteOnTermination" : "true",
               "SubnetId" : { "Ref" : "PublicSubnetAZ3" }
            }],
            "Tags" : [ {"Key" : "Name", "Value" : "SharedNAT_AZ3"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },  
      "PrivateSubnetAZ1" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "AvailabilityZone": { "Fn::FindInMap" : [ "Region2AZ", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "AZ1"]},
            "CidrBlock": { "Fn::FindInMap" : [ "RegionVpcCidr", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "PrivateSubnetAZ1Cidr"]},
            "Tags" : [ {"Key" : "Name", "Value" : "PrivateSubnetAZ1"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "PrivateSubnetAZ2" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "AvailabilityZone": { "Fn::FindInMap" : [ "Region2AZ", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "AZ2"]},
            "CidrBlock": { "Fn::FindInMap" : [ "RegionVpcCidr", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "PrivateSubnetAZ2Cidr"]},
            "Tags" : [ {"Key" : "Name", "Value" : "PrivateSubnetAZ2"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "PrivateSubnetAZ3" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "AvailabilityZone": { "Fn::FindInMap" : [ "Region2AZ", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "AZ3"]},
            "CidrBlock": { "Fn::FindInMap" : [ "RegionVpcCidr", {"Fn::FindInMap" : [ "RegionEnvironment", { "Ref" : "RegionName" }, { "Ref" : "Environment"}]}, "PrivateSubnetAZ3Cidr"]},
            "Tags" : [ {"Key" : "Name", "Value" : "PrivateSubnetAZ3"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "PrivateRouteTableAZ1" : {
         "Type" : "AWS::EC2::RouteTable",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "Tags" : [ {"Key" : "Name", "Value" : "PrivateSubnet1AZRouteTable"}]
         }
      }, 
      "PrivateRouteTableAZ2" : {
         "Type" : "AWS::EC2::RouteTable",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "Tags" : [ {"Key" : "Name", "Value" : "PrivateSubnet1AZRouteTable"}]
         }
      },    
      "PrivateRouteTableAZ3" : {
         "Type" : "AWS::EC2::RouteTable",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "Tags" : [ {"Key" : "Name", "Value" : "PrivateSubnet1AZRouteTable"}]
         }
      },    
      "PrivateSubnetAZ1RouteTableAssociation" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : { "Ref" : "PrivateSubnetAZ1" },
            "RouteTableId" : { "Ref" : "PrivateRouteTableAZ1" }
         }
      },
      "PrivateSubnetAZ2RouteTableAssociation" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : { "Ref" : "PrivateSubnetAZ2" },
            "RouteTableId" : { "Ref" : "PrivateRouteTableAZ2" }
         }
      },
      "PrivateSubnetAZ3RouteTableAssociation" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : { "Ref" : "PrivateSubnetAZ3" },
            "RouteTableId" : { "Ref" : "PrivateRouteTableAZ3" }
         }
      },
      "PrivateRouteAZ1" : {
         "Type" : "AWS::EC2::Route",
         "Properties" : {
            "RouteTableId" : { "Ref" : "PrivateRouteTableAZ1" },
            "DestinationCidrBlock" : "0.0.0.0/0",
            "InstanceId" : { "Ref" : "SharedNatAZ1" }
         }
      },
      "PrivateRouteAZ2" : {
         "Type" : "AWS::EC2::Route",
         "Properties" : {
            "RouteTableId" : { "Ref" : "PrivateRouteTableAZ2" },
            "DestinationCidrBlock" : "0.0.0.0/0",
            "InstanceId" : { "Ref" : "SharedNatAZ2" }
         }
      },
      "PrivateRouteAZ3" : {
         "Type" : "AWS::EC2::Route",
         "Properties" : {
            "RouteTableId" : { "Ref" : "PrivateRouteTableAZ3" },
            "DestinationCidrBlock" : "0.0.0.0/0",
            "InstanceId" : { "Ref" : "SharedNatAZ3" }
         }
      },
      "CustomerGateway" : {
         "Type" : "AWS::EC2::CustomerGateway",
         "Properties" : {
            "Type" : "ipsec.1",
            "IpAddress" : { "Ref" : "IPSecTunnelTarget" },
            "BgpAsn": { "Ref" : "BgpAutonomousSystemNumber" },
            "Tags" : [ {"Key" : "Name", "Value" : "CustomerGateway"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "VpnGateway" : {
         "Type" : "AWS::EC2::VPNGateway",
         "Properties" : {
            "Type" : "ipsec.1",
            "Tags" : [ {"Key" : "Name", "Value" : "VpnGateway"}, {"Key" : "TechnicalOwner", "Value" : "Netops"}, {"Key" : "Environment", "Value" : { "Ref" : "Environment"}}]
         }
      },
      "VpcVpnGatewayAttachment" : {
         "Type" : "AWS::EC2::VPCGatewayAttachment",
         "Properties" : {
            "VpcId" : { "Ref" : "MozillaVpc" },
            "VpnGatewayId" : { "Ref" : "VpnGateway" }
         }
      },
      "VpcVpnConnection": {
         "Type": "AWS::EC2::VPNConnection",
         "DependsOn" : "VpcVpnGatewayAttachment",
         "Properties": {
            "Type": "ipsec.1",
            "CustomerGatewayId": { "Ref":"CustomerGateway" },
            "StaticRoutesOnly": "False",
            "VpnGatewayId": { "Ref" : "VpnGateway" }
         }
      },
      "RouteToMozillaDataCenters" : {
         "Type" : "AWS::EC2::Route",
         "DependsOn" : "VpcVpnConnection",
         "Properties" : {
            "RouteTableId" : { "Ref" : "PublicRouteTable" },
            "DestinationCidrBlock" : "10.0.0.0/10",
            "GatewayId" : { "Ref" : "VpnGateway" }
         }
      },
      "RouteToMozillaOffices" : {
         "Type" : "AWS::EC2::Route",
         "DependsOn" : "VpcVpnConnection",
         "Properties" : {
            "RouteTableId" : { "Ref" : "PublicRouteTable" },
            "DestinationCidrBlock" : "10.192.0.0/10",
            "GatewayId" : { "Ref" : "VpnGateway" }
         }
      }
   },

   "Outputs" : {
      "StackNameId" : {
         "Description" : "The name of the stack that was just run.", 
         "Value" : { "Ref" : "AWS::StackName" }
      },
      "StackId" : {
         "Description" : "The stack id of the stack that was just created.",
         "Value" : { "Ref" : "AWS::StackId" }
      }, 
      "RegionId" : {
         "Description" : "The region in which this Vpc was just created.",
         "Value" : { "Ref" : "RegionName" }
      },
      "Environment" : {
         "Description" : "The type of VPC: admin, dev, stage, or prod",
         "Value" : { "Ref" : "Environment" }
      }, 
      "VpcId" : {
         "Description" : "The ID of the VPC this template just created.",
         "Value" : { "Ref" : "MozillaVpc" }
      },
      "PublicSubnetAZ1": {
         "Value" : {"Ref": "PublicSubnetAZ1"}
      },
      "PublicSubnetAZ2": {
         "Value" : {"Ref": "PublicSubnetAZ2"}
      },
      "PublicSubnetAZ3": {
         "Value" : {"Ref": "PublicSubnetAZ3"}
      },
      "PrivateSubnetAZ1": {
         "Value" : {"Ref": "PrivateSubnetAZ1"}
      },
      "PrivateSubnetAZ2": {
         "Value" : {"Ref": "PrivateSubnetAZ2"}
      },
      "PrivateSubnetAZ3": {
         "Value" : {"Ref": "PrivateSubnetAZ3"}
      },
      "SharedServicesSecurityGroupId" : {
          "Value" : { "Ref" : "SharedServicesSecurityGroup" }
      },
      "InternetAccessSecurityGroupId" : {
          "Value" : { "Ref" : "InternetAccessSecurityGroup" }
      }
   }
}


